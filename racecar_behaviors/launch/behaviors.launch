<!-- -->
<launch>  
  
  <!-- APP5: Add your behaviors in this file.
       Remap cmd_vel output of your nodes to one available abitration entries (from highest to lowest prority): 
         cmd_vel_abtr_1,
         cmd_vel_abtr_2,
         cmd_vel_abtr_3,
         cmd_vel_abtr_4,
         cmd_vel_abtr_5,
         cmd_vel_abtr_6,
         cmd_vel_abtr_7,
         
         cmd_vel_abtr_0 is reserved for teleop (highest priority).
  -->

  <!-- <include file="/home/vboxuser/catkin_ws/src/RacecarS5/racecar_behaviors/launch/blob_detection.launch"/> -->

  <arg name="prefix" default="racecar"/>

  <arg name="cmd_vel_topic" default="cmd_vel_abtr_3"/>
  <arg name="odom_topic"    default="odom"/>
  <arg name="use_sim_time"  default="false"/>

  <arg name="fixed_frame_id" default="odom"/> <!-- set "map" when a map is used! -->
  <arg name="debug" default="false"/>
   
  <param if="$(arg use_sim_time)" name="use_sim_time" value="true"/>
  
  <group ns="$(arg prefix)">
    <!-- 
    <node pkg="racecar_behaviors" type="path_following.py" name="path_following" output="screen">
       <param name="max_speed" value="1"/>
       <remap from="cmd_vel" to="cmd_vel_abtr_2"/>
       <remap from="scan"    to="scan"/>
       <remap from="odom"    to="odometry/filtered"/>
    </node>  
    -->
    <node pkg="racecar_behaviors" type="obstacle_detector.py" name="obstacle_detector" output="screen">
       <remap from="cmd_vel" to="cmd_vel_abtr_1"/>
       <remap from="scan"    to="scan"/>
    </node>

	  <node pkg="racecar_behaviors" type="move_base_send_coordinates.py" name="move_base_send_coordinates" output="screen"> </node>  

       <!-- Navigation -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
      <remap from="scan" to="scan"/>
      <remap from="map" to="map"/>

      <param name="global_costmap/global_frame" value="$(arg prefix)/map"/>
      <param name="global_costmap/robot_base_frame" value="$(arg prefix)/base_footprint"/>
      <param name="local_costmap/global_frame" value="$(arg prefix)/odom"/>
      <param name="local_costmap/robot_base_frame" value="$(arg prefix)/base_footprint"/>
    
      <rosparam file="$(find racecar_navigation)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
      <rosparam file="$(find racecar_navigation)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
      <rosparam file="$(find racecar_navigation)/config/local_costmap_params.yaml" command="load" />
      <rosparam file="$(find racecar_navigation)/config/global_costmap_params.yaml" command="load" />
      <rosparam file="$(find racecar_navigation)/config/teb_local_planner_params.yaml" command="load" />

      <param name="base_global_planner" value="global_planner/GlobalPlanner" />
      <param name="planner_frequency" value="1.0" />
      <param name="planner_patience" value="5.0" />

      <param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" />
      <param name="controller_frequency" value="5.0" />
      <param name="controller_patience" value="15.0" />

      <param name="clearing_rotation_allowed" value="false" /> <!-- Our carlike robot is not able to rotate in place -->

      <remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
      <remap from="/odom" to="$(arg odom_topic)"/>
    </node>

    <!-- uncompress raspicam image -->
    <node pkg="image_transport" type="republish" name="republish_raspicam" args="compressed in:=raspicam_node/image raw out:=raspicam_node/image"/>
    <!-- convert scan to a point cloud -->
    <node pkg="racecar_behaviors" type="laserscan_to_pointcloud.py" name="laserscan_to_pointcloud">
       <remap from="converted_pc" to="scan_cloud"/>
       <remap from="/scan" to="scan"/>
    </node>
    <!-- register scan to camera -->
    <node pkg="rtabmap_util" type="pointcloud_to_depthimage" name="pointcloud_to_depthimage">
       <param name="fixed_frame_id"  value="$(arg prefix)/odom"/>
       <param name="fill_holes_size" value="2"/>
       <remap from="camera_info" to="raspicam_node/camera_info"/>
       <remap from="cloud"     to="scan_cloud"/>
       <remap from="image"     to="raspicam_node/depth_registered"/>
       <remap from="image_raw" to="raspicam_node/depth_registered_raw"/>
    </node>
    <!-- blob_detector -->
    <node pkg="racecar_behaviors" type="blob_detector.py" name="blob_detector" output="screen">
       <remap from="image"       to="raspicam_node/image"/>
       <remap from="camera_info" to="raspicam_node/camera_info"/>
       <remap from="depth"       to="raspicam_node/depth_registered"/>
       <param name="map_frame_id"    value="$(arg prefix)/$(arg fixed_frame_id)"/>
       <param name="frame_id"        value="$(arg prefix)/base_footprint"/>
       <param name="object_frame_id" value="$(arg prefix)/object"/>
       <param name="color_hue"       value="120"/>
    </node>
        
    <!-- used to debug camera vs scan registration -->
    <group if="$(arg debug)">
       <node pkg="nodelet" type="nodelet" name="point_cloud_xyzrgb" args="standalone rtabmap_util/point_cloud_xyzrgb">
          <param name="approx_sync"  value="false"/>
          <remap from="cloud"           to="raspicam_node/registered_cloud"/>
          <remap from="depth/image"     to="raspicam_node/depth_registered_raw"/>
          <remap from="rgb/image"       to="raspicam_node/image_rect_color"/>
          <remap from="rgb/camera_info" to="raspicam_node/camera_info"/>
       </node>
       <node pkg="image_view" type="image_view" name="image_view_detections">
          <remap from="image"       to="/racecar/image_detections"/>
          <param name="autosize"    value="true"/>
          <param name="window_name" value="objects"/>
       </node>
       <node pkg="image_view" type="image_view" name="image_view_depth">
          <remap from="image"       to="raspicam_node/depth_registered"/>
          <param name="autosize"    value="true"/>
          <param name="window_name" value="lidar"/>
       </node>
       <node pkg="image_view" type="image_view" name="image_view_image">
          <remap from="image"       to="raspicam_node/image"/>
          <param name="autosize"    value="true"/>
          <param name="window_name" value="raw"/>
       </node>
       <group ns="raspicam_node">
          <node pkg="image_proc" type="image_proc" name="image_proc_rectify">
             <remap from="image_raw" to="image"/>
          </node>
       </group>
       <node pkg="image_view" type="image_view" name="image_view_rectified">
          <remap from="image"       to="raspicam_node/image_rect_color"/>
          <param name="autosize"    value="true"/>
          <param name="window_name" value="rectified"/>
       </node>
       <node pkg="rqt_reconfigure" type="rqt_reconfigure" name="rqt_reconfigure"/>
       <node name="rviz" pkg="rviz" type="rviz" args="-d $(find racecar_bringup)/config/bringup.rviz"/>
    </group>

  </group>
</launch>
